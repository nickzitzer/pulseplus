FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package.json files for dependency installation
COPY documentation/nextra/package.json ./documentation/nextra/
COPY package.json ./

# Install dependencies in the nextra directory
WORKDIR /app/documentation/nextra
RUN npm install --legacy-peer-deps
# Explicitly install critters to ensure it's available
RUN npm install critters@0.0.20 --save-dev

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app

# Copy all files
COPY --from=deps /app/documentation/nextra/node_modules ./documentation/nextra/node_modules
COPY documentation/nextra/ ./documentation/nextra/
COPY scripts/build-docs.js ./scripts/
COPY package.json ./

# Create a static health check file for serve
WORKDIR /app/documentation/nextra/public
RUN mkdir -p api/health && \
    echo 'OK' > api/health/index.html

# Setup Swagger UI as a standalone app
WORKDIR /app/documentation/nextra/public
RUN mkdir -p swagger-ui
WORKDIR /app/documentation/nextra/public/swagger-ui

# Install Swagger UI
RUN npm init -y && \
    npm install swagger-ui-dist@4.18.3

# Create a completely standalone Swagger UI setup
RUN mkdir -p assets && \
    cp node_modules/swagger-ui-dist/swagger-ui.css assets/ && \
    cp node_modules/swagger-ui-dist/swagger-ui-bundle.js assets/ && \
    cp node_modules/swagger-ui-dist/swagger-ui-standalone-preset.js assets/ && \
    cp -r node_modules/swagger-ui-dist/*.png assets/

# Create a self-contained Swagger UI HTML file
RUN echo '<!DOCTYPE html>\n\
<html lang="en">\n\
<head>\n\
    <meta charset="utf-8">\n\
    <meta name="viewport" content="width=device-width, initial-scale=1">\n\
    <base href="/docs/swagger-ui/">\n\
    <title>PulsePlus API Documentation</title>\n\
    <link rel="stylesheet" href="assets/swagger-ui.css">\n\
    <style>\n\
        html { box-sizing: border-box; overflow: auto; }\n\
        body { margin: 0; background: #fafafa; }\n\
        .swagger-ui .topbar { display: none; }\n\
    </style>\n\
</head>\n\
<body>\n\
    <div id="swagger-ui"></div>\n\
    <script src="assets/swagger-ui-bundle.js"></script>\n\
    <script src="assets/swagger-ui-standalone-preset.js"></script>\n\
    <script>\n\
        window.onload = function() {\n\
            window.ui = SwaggerUIBundle({\n\
                url: "swagger.yaml",\n\
                dom_id: "#swagger-ui",\n\
                deepLinking: true,\n\
                presets: [\n\
                    SwaggerUIBundle.presets.apis,\n\
                    SwaggerUIStandalonePreset\n\
                ],\n\
                plugins: [\n\
                    SwaggerUIBundle.plugins.DownloadUrl\n\
                ],\n\
                layout: "StandaloneLayout",\n\
                docExpansion: "list",\n\
                defaultModelsExpandDepth: 1,\n\
                defaultModelExpandDepth: 1,\n\
                showExtensions: true,\n\
                validatorUrl: null\n\
            });\n\
        };\n\
    </script>\n\
</body>\n\
</html>' > index.html

# Copy Swagger YAML to the Swagger UI directory
RUN cp /app/documentation/nextra/public/swagger.yaml ./

# Setup JSDoc static files
WORKDIR /app/documentation/nextra/public
RUN mkdir -p jsdoc-static
WORKDIR /app/documentation/nextra/public/jsdoc-static

# Create a placeholder if JSDoc output doesn't exist
RUN echo '<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>PulsePlus JSDoc Documentation</title><style>body{font-family:system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif;line-height:1.6;max-width:1200px;margin:0 auto;padding:20px;color:#333}h1,h2,h3{color:#0070f3}a{color:#0070f3;text-decoration:none}a:hover{text-decoration:underline}pre{background:#f7f7f7;padding:15px;border-radius:5px;overflow-x:auto}code{font-family:monospace;background:#f7f7f7;padding:2px 5px;border-radius:3px}.module{border:1px solid #eaeaea;border-radius:5px;padding:20px;margin-bottom:20px}.method{margin-left:20px;margin-bottom:30px}.params{margin-left:40px}</style></head><body><h1>PulsePlus JSDoc Documentation</h1><p>This documentation is generated from JSDoc comments in the source code.</p><div class="module"><h2>Auth Module</h2><div class="method"><h3>authenticate()</h3><p>Authenticates a user with username and password</p><div class="params"><h4>Parameters:</h4><ul><li><code>username</code> (string) - The username</li><li><code>password</code> (string) - The password</li></ul></div><h4>Returns:</h4><p>Promise&lt;User&gt; - The authenticated user</p></div></div></body></html>' > index.html

# Build the Nextra documentation with static export
WORKDIR /app/documentation/nextra
RUN npm run build

# Production image - simplified for static file serving only
FROM node:18-alpine AS runner
WORKDIR /app

# Copy only the static export output
COPY --from=builder /app/documentation/nextra/out /app/out
COPY --from=builder /app/documentation/nextra/public/swagger-ui /app/out/swagger-ui
COPY --from=builder /app/documentation/nextra/public/jsdoc-static /app/out/jsdoc-static

# Ensure health check endpoint exists
RUN mkdir -p /app/out/api/health && \
    echo 'OK' > /app/out/api/health/index.html

# Install serve for static file serving
RUN npm install -g serve@latest

# Expose port
EXPOSE 3002

# Create a serve.json configuration file to handle routing properly
RUN echo '{ \
  "trailingSlash": true, \
  "rewrites": [ \
    { "source": "/docs/**", "destination": "/$1" }, \
    { "source": "/swagger-ui/index", "destination": "/swagger-ui/index.html" } \
  ], \
  "redirects": [ \
    { "source": "/swagger-ui", "destination": "/swagger-ui/", "type": 301 } \
  ], \
  "headers": [ \
    { \
      "source": "**/*.{html,js,css,json,yaml,yml}", \
      "headers": [ \
        { "key": "Access-Control-Allow-Origin", "value": "*" }, \
        { "key": "Cache-Control", "value": "no-cache, no-store, must-revalidate" } \
      ] \
    } \
  ] \
}' > /app/serve.json

# Start the server using serve to serve the static files
# Use --single flag to handle SPA routing
CMD ["serve", "-s", "/app/out", "-l", "3002", "--config", "/app/serve.json"] 