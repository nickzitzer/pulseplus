version: '3.8'

services:
  nginx:
    build:
      context: ../../..
      dockerfile: deployment/docker/Dockerfile.nginx
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_healthy
    networks:
      - pulseplus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  frontend:
    build:
      context: ../../..
      dockerfile: deployment/docker/Dockerfile.frontend
    image: ${FRONTEND_IMAGE}
    environment:
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
      - NODE_ENV=${NODE_ENV:-production}
    networks:
      - pulseplus-network
    ports:
      - "3000:3000"
    healthcheck:
      disable: true
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  backend:
    build:
      context: ../../..
      dockerfile: deployment/docker/Dockerfile.backend
    image: ${BACKEND_IMAGE}
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - POSTGRES_URL=${POSTGRES_URL}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
      - DB_NAME=pulseplus_db
      - DB_USER=pulseplus-admin
      - DB_PASSWORD=Work4PulsePlus1
      - DB_HOST=db
      - CONFIG_ENCRYPTION_ENABLED=false
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pulseplus-network
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3001 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  db:
    build:
      context: ../../..
      dockerfile: deployment/docker/Dockerfile.db
    environment:
      - POSTGRES_USER=pulseplus-admin
      - POSTGRES_PASSWORD=Work4PulsePlus1
      - POSTGRES_DB=pulseplus_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pulseplus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pulseplus-admin -d pulseplus_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - pulseplus-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

volumes:
  postgres_data:
  redis_data:

networks:
  pulseplus-network:
    driver: bridge