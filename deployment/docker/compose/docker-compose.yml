version: '3.8'

services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - frontend
      - backend
    networks:
      - pulseplus-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    image: ${FRONTEND_IMAGE}
    environment:
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
    networks:
      - pulseplus-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    image: ${BACKEND_IMAGE}
    environment:
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_URL=${POSTGRES_URL}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
    depends_on:
      - db
      - redis
    networks:
      - pulseplus-network

  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    environment:
      - POSTGRES_USER=pulseplus-admin
      - POSTGRES_PASSWORD=Work4PulsePlus1
      - POSTGRES_DB=pulseplus_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pulseplus-network

  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - pulseplus-network

volumes:
  postgres_data:
  redis_data:

networks:
  pulseplus-network:
    driver: bridge