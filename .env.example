# SHARED CONFIGURATION
# ====================

# PORTS
FRONTEND_PORT=80
BACKEND_PORT=80

# URLS
NEXT_PUBLIC_FRONTEND_URL=http://localhost
NEXT_PUBLIC_BACKEND_URL=http://localhost/api

# Docker configuration
FRONTEND_IMAGE=pulseplus-frontend:latest
BACKEND_IMAGE=pulseplus-backend:latest
DB_IMAGE=postgres:13-alpine
REBUILD_DB=false

# AWS Configuration
AWS_ACCOUNT_ID=123456789012
AWS_REGION=us-east-1
VPC_ID=vpc-0abc2e752d65e9c4b
SUBNET_ID_1=subnet-0dc457f24a5dedf1d
SUBNET_ID_2=subnet-0f5a127671d7f9bf0
SECURITY_GROUP_ID=sg-01ca7c9f47ecda82a
CLUSTER_NAME=pulseplus-cluster

# ALB Configuration
ALB_NAME=pulseplus-alb
FRONTEND_TG_NAME=pulseplus-frontend-tg
BACKEND_TG_NAME=pulseplus-backend-tg

# FRONTEND-SPECIFIC CONFIGURATION
# ===============================
# Add any frontend-only variables here
# Note: Variables that need to be accessible in the browser must be prefixed with NEXT_PUBLIC_


# BACKEND-SPECIFIC CONFIGURATION
# ==============================
# Security
# For development only - in production use JWT_SECRET_ID instead
JWT_SECRET=your_jwt_secret_key_here

# For production/staging environments (REQUIRED in production/staging)
# ARN of the AWS Secrets Manager secret containing the JWT secret
# The secret should contain a JSON object with a "jwt_secret" key
# Example: {"jwt_secret": "your-secure-jwt-secret"}
JWT_SECRET_ID=arn:aws:secretsmanager:us-east-1:123456789012:secret:pulseplus/jwt-secret
SESSION_SECRET=your_session_secret_key_here
NODE_ENV=development
POSTGRES_URL=postgresql://pulseplus-admin:password@db:5432/pulseplus_db

# AWS Secrets Manager (for production/staging)
# DB_SECRET_ID=arn:aws:secretsmanager:us-east-1:123456789012:secret:pulseplus/db-secret

# API Key Management (for development only - in production use AWS Secrets Manager)
# Format: SERVICE_NAME_API_KEY=your_api_key_here
GCS_API_KEY=your_gcs_api_key_here
ANALYTICS_API_KEY=your_analytics_api_key_here

# API Key Rotation Configuration
API_KEY_ROTATION_ENABLED=true
API_KEY_ROTATION_INTERVAL=30 # days
API_KEY_SECRET_PREFIX=pulseplus/api-keys

# WebSocket Configuration
WEBSOCKET_ENABLED=true
WEBSOCKET_PATH=/socket.io
# WebSocket Rate Limiting
WS_RATE_LIMITING_ENABLED=true
WS_MAX_CONNECTIONS=60 # Maximum connections per IP per minute
WS_CONNECTION_WINDOW_MS=60000 # Connection rate limiting window in milliseconds (1 minute)
WS_MAX_MESSAGES=120 # Maximum messages per socket per minute
WS_MESSAGE_WINDOW_MS=60000 # Message rate limiting window in milliseconds (1 minute)

# Security Scanning Configuration
SECURITY_SCANNING_ENABLED=true
SNYK_TOKEN=your_snyk_token_here
SONARQUBE_TOKEN=your_sonarqube_token_here
SECURITY_HUB_PRODUCT_NAME=PulsePlus
SECURITY_HUB_COMPANY_NAME=Happy Technologies LLC

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=pulseplus_db
DB_USER=pulseplus-admin
DB_PASSWORD=your_db_password_here
DB_SSL_ENABLED=false
DB_SSL_REJECT_UNAUTHORIZED=true
DB_SSL_CA_PATH=./backend/certs/ca.pem
DB_SSL_KEY_PATH=./backend/certs/client-key.pem
DB_SSL_CERT_PATH=./backend/certs/client-cert.pem

# AWS Credentials (for local development)
AWS_ACCESS_KEY_ID=your_access_key_id
AWS_SECRET_ACCESS_KEY=your_secret_access_key

# Redis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password_here
REDIS_URL=redis://redis:6379

# Email
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your_smtp_user
SMTP_PASS=your_smtp_password
SMTP_FROM=noreply@example.com

# Cache TTLs in milliseconds
CACHE_TTL_BALANCE=300000
CACHE_TTL_LEADERBOARD=120000
CACHE_TTL_PROFILE=300000
CACHE_TTL_SHOP=600000

# Configuration Encryption
CONFIG_ENCRYPTION_ENABLED=false
CONFIG_MASTER_KEY_PATH=./keys/master.key
# For production, use environment variable:
# CONFIG_MASTER_KEY_PATH=ENV:CONFIG_MASTER_KEY

# Configuration Versioning
CONFIG_VERSIONING_ENABLED=true
CONFIG_VERSIONS_DIR=./config-versions 